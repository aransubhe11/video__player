{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ransu\\\\OneDrive\\\\Desktop\\\\Video_Player\\\\video-editor\\\\src\\\\components\\\\VideoTrimmer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TimelineSlider from './TimelineSlider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoTrimmer = ({\n  videoDuration\n}) => {\n  _s();\n  const [startTrim, setStartTrim] = useState(0);\n  const [endTrim, setEndTrim] = useState(videoDuration);\n  const handleTrimChange = (start, end) => {\n    setStartTrim(start);\n    setEndTrim(end);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Trimmed Duration: \", endTrim - startTrim, \" seconds\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimelineSlider, {\n      videoDuration: videoDuration,\n      onTrimChange: handleTrimChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoTrimmer, \"ZDHGzisg8YtTn0L1Sk9kyWFu/ac=\");\n_c = VideoTrimmer;\nexport default VideoTrimmer;\nvar _c;\n$RefreshReg$(_c, \"VideoTrimmer\");","map":{"version":3,"names":["React","useState","TimelineSlider","jsxDEV","_jsxDEV","VideoTrimmer","videoDuration","_s","startTrim","setStartTrim","endTrim","setEndTrim","handleTrimChange","start","end","children","fileName","_jsxFileName","lineNumber","columnNumber","onTrimChange","_c","$RefreshReg$"],"sources":["C:/Users/ransu/OneDrive/Desktop/Video_Player/video-editor/src/components/VideoTrimmer.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TimelineSlider from './TimelineSlider';\n\nconst VideoTrimmer: React.FC<{ videoDuration: number }> = ({ videoDuration }) => {\n  const [startTrim, setStartTrim] = useState(0);\n  const [endTrim, setEndTrim] = useState(videoDuration);\n\n  const handleTrimChange = (start: number, end: number) => {\n    setStartTrim(start);\n    setEndTrim(end);\n  };\n\n  return (\n    <div>\n      <p>Trimmed Duration: {endTrim - startTrim} seconds</p>\n      <TimelineSlider videoDuration={videoDuration} onTrimChange={handleTrimChange} />\n    </div>\n  );\n};\n\nexport default VideoTrimmer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,YAAiD,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC/E,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACK,aAAa,CAAC;EAErD,MAAMM,gBAAgB,GAAGA,CAACC,KAAa,EAAEC,GAAW,KAAK;IACvDL,YAAY,CAACI,KAAK,CAAC;IACnBF,UAAU,CAACG,GAAG,CAAC;EACjB,CAAC;EAED,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,GAAG,oBAAkB,EAACL,OAAO,GAAGF,SAAS,EAAC,UAAQ;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtDf,OAAA,CAACF,cAAc;MAACI,aAAa,EAAEA,aAAc;MAACc,YAAY,EAAER;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7E,CAAC;AAEV,CAAC;AAACZ,EAAA,CAfIF,YAAiD;AAAAgB,EAAA,GAAjDhB,YAAiD;AAiBvD,eAAeA,YAAY;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}